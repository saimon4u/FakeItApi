services:
  mongodb:
    container_name: mongo
    image: mongo:latest
    volumes:
      - fakeapivolume:/data/db
    ports:
      - "27017:27017"
    networks:
      - monitoring-net

  backend:
    container_name: backend
    build: ./backend
    environment:
      MONGO_URI: "mongodb://mongo:27017/fakeapi"
      JWT_SECRET: "secret"
      SALT: "10"
      PORT: "3000"
    ports:
      - "3000:3000"
    networks:
      - monitoring-net
    depends_on:
      - mongodb

  frontend:
    container_name: frontend
    build: ./frontend
    environment:
      VITE_BACKEND_HOST: "http://localhost:3000/"
    ports:
      - "5173:5173"
    networks:
      - monitoring-net
    depends_on:
      - backend

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - monitoring-net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - grafana

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - monitoring-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus # Add this line
    depends_on:
      - backend
      - frontend

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    networks:
      - monitoring-net
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/grafana/" # Add this line
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

  loki:
    container_name: loki
    image: grafana/loki:latest
    networks:
      - monitoring-net
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"
    networks:
      - monitoring-net

networks:
  monitoring-net:

volumes:
  fakeapivolume:
  grafana-data:
  prometheus-data: